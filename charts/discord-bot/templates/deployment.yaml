{{- range .Values.deployments }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}-{{ $.Values.environment }}
  namespace: {{ template "app.namespace" $ | default "default" }}
spec:
  selector:
    matchLabels:
      app: {{ .name }}
  replicas: {{ .replicas | default 1 }}
  template:
    metadata:
      labels:
        app: {{ .name }}
        version: "{{ $.Values.version }}"
    spec:
      {{- if .initContainer }}
      initContainers:
        - name: {{ .initContainer.name }}
          image: {{ .initContainer.image }}
          command: {{ .initContainer.command | toYaml | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: {{ .pullPolicy | default "Always" }}
          {{- if .containerPort }}
          ports:
            - containerPort: {{ .containerPort }}
          {{- end }}
          {{- if .readinessProbe }}
          readinessProbe:
            {{- if .readinessProbe.httpGet }}
            httpGet:
              path: {{ .readinessProbe.httpGet.path }}
              port: {{ .readinessProbe.httpGet.port }}
            {{- else if .readinessProbe.tcpSocket }}
            tcpSocket:
              port: {{ .readinessProbe.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .readinessProbe.timeoutSeconds | default 1 }}
          {{- end }}
          {{- if .resources }}
          resources:
            {{- if .resources.limits }}
            limits:
              cpu: {{ .resources.limits.cpu | default "200m" }}
              memory: {{ .resources.limits.memory | default "256Mi" }}
            {{- end }}
            {{- if .resources.requests }}
            requests:
              cpu: {{ .resources.requests.cpu | default "100m" }}
              memory: {{ .resources.requests.memory | default "128Mi" }}
            {{- end }}
          {{- end }}
          {{- if .environment }}
          envFrom:
            - configMapRef:
                name: env-{{ .name }}
          {{- end }}
          {{- if or .config .secrets .volumes }}
          volumeMounts:
            {{- if .volumes }}
            {{- range .volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default false }}
            {{- end }}
            {{- end }}
            {{- if .config }}
            - name: config-file-{{ .name }}
              mountPath: {{ .config.mountPath | default "/config" }}
              readOnly: true
            {{- end }}
            {{- if .secrets }}
            - name: secrets-{{ .name }}
              mountPath: /secrets
              readOnly: true
            {{- end }}
          {{- end}}
      {{- if or .config .secrets .volumes }}
      volumes:
        {{- range .volumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .name }}
        {{- end }}
        {{- if .config }}
        - name: config-file-{{ .name }}
          configMap:
            name: config-file-{{ .name }}
        {{- end }}
        {{- if .secrets }}
        - name: secrets-{{ .name }}
          secret:
            secretName: secrets-{{ .name }}
        {{- end }}
      {{- end }}
      imagePullSecrets:
        - name: regcred
---
{{- end }}