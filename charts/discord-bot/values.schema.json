{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "deployments": {
      "additionalProperties": false,
      "description": "Configuration for the container image to be used in the Deployment. This is used to specify the container image, pull policy, and container port.\n",
      "items": {
        "additionalProperties": false,
        "properties": {
          "config": {
            "additionalProperties": false,
            "description": "Configuration file to be mounted as a volume (e.g., config.yaml). This is typically used for application-specific configuration files. Pass these configuration files when running helm install using --set-file. For example: helm install my-release . --set-file appConfig=config.yaml\n",
            "properties": {
              "fileName": {
                "description": "Name of the configuration file to be mounted as.",
                "examples": [
                  "config.yaml"
                ],
                "required": [],
                "type": "string"
              },
              "fileVariable": {
                "description": "Name of the variable containing the configuration file.",
                "examples": [
                  "appConfig"
                ],
                "required": [],
                "type": "string"
              },
              "mountPath": {
                "description": "Path inside the container where the configuration file will be mounted.",
                "examples": [
                  "/config"
                ],
                "required": [],
                "type": "string"
              }
            },
            "required": [
              "fileVariable"
            ],
            "type": "object"
          },
          "containerPort": {
            "description": "Port to expose on the container.",
            "examples": [
              "80"
            ],
            "required": [],
            "type": "integer"
          },
          "environment": {
            "additionalProperties": true,
            "description": "Configurations for environment variables loaded from a ConfigMap. This allows the container to access configuration values via environment variables, specified as key-value pairs.\n",
            "required": [],
            "type": "object"
          },
          "image": {
            "description": "Container image to be used.",
            "examples": [
              "nginx:latest"
            ],
            "required": [],
            "type": "string"
          },
          "initContainer": {
            "additionalProperties": false,
            "description": "An init container to run before the main container starts.\n",
            "properties": {
              "command": {
                "description": "Command to run in the init container.",
                "examples": [
                  "echo",
                  "Hello, World!"
                ],
                "items": {
                  "required": [],
                  "type": "string"
                },
                "required": [],
                "type": "array"
              },
              "image": {
                "description": "Init container image to be used.",
                "examples": [
                  "busybox"
                ],
                "required": [],
                "type": "string"
              },
              "name": {
                "description": "Name of the init container.",
                "examples": [
                  "init-container"
                ],
                "required": [],
                "type": "string"
              }
            },
            "required": [
              "name",
              "image",
              "command"
            ],
            "type": "object"
          },
          "name": {
            "description": "Name of the container.",
            "examples": [
              "my-container"
            ],
            "pattern": "^[a-z0-9-]+$",
            "required": [],
            "type": "string"
          },
          "pullPolicy": {
            "description": "Pull policy for the container image.",
            "enum": [
              "Always",
              "IfNotPresent",
              "Never"
            ],
            "examples": [
              "Always"
            ],
            "required": []
          },
          "readinessProbe": {
            "additionalProperties": false,
            "description": "Configuration for the readiness probe to check if the container is ready to serve traffic. This is used to determine when the container is ready to accept requests. This can be an HTTP check or a TCP check, do not use both.\n",
            "properties": {
              "httpGet": {
                "additionalProperties": false,
                "description": "HTTP check to perform for the readiness probe. This is used to check if the container is ready to serve traffic.\n",
                "properties": {
                  "path": {
                    "description": "Path to check for the HTTP request.",
                    "examples": [
                      "/healthz"
                    ],
                    "required": [],
                    "type": "string"
                  },
                  "port": {
                    "description": "Port to check for the HTTP request.",
                    "examples": [
                      "8080"
                    ],
                    "required": [],
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "initialDelaySeconds": {
                "description": "Number of seconds after the container has started before the readiness probe is initiated.",
                "examples": [
                  "5"
                ],
                "required": [],
                "type": "integer"
              },
              "periodSeconds": {
                "description": "How often (in seconds) to perform the readiness probe.",
                "examples": [
                  "10"
                ],
                "required": [],
                "type": "integer"
              },
              "tcpSocket": {
                "additionalProperties": false,
                "description": "TCP check to perform for the readiness probe. This is used to check if the container is ready to serve traffic.\n",
                "properties": {
                  "port": {
                    "description": "Port to check for the TCP connection.",
                    "examples": [
                      "8080"
                    ],
                    "required": [],
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "timeoutSeconds": {
                "description": "Number of seconds after which the readiness probe times out.",
                "examples": [
                  "1"
                ],
                "required": [],
                "type": "integer"
              }
            },
            "required": [],
            "type": "object"
          },
          "replicas": {
            "description": "Number of replicas for the Deployment.",
            "examples": [
              "3"
            ],
            "maximum": 3,
            "minimum": 1,
            "required": [],
            "type": "integer"
          },
          "resources": {
            "additionalProperties": false,
            "description": "Resource limits and requests for the container.",
            "properties": {
              "limits": {
                "additionalProperties": false,
                "description": "Maximum resources the container can use.",
                "properties": {
                  "cpu": {
                    "description": "Maximum CPU the container can use.",
                    "examples": [
                      "200m"
                    ],
                    "pattern": "^[1-9][0-9]*m?$",
                    "required": [],
                    "type": "string"
                  },
                  "memory": {
                    "description": "Maximum memory the container can use.",
                    "examples": [
                      "256Mi"
                    ],
                    "pattern": "^[1-9][0-9]*[KMGTE]i?$",
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "requests": {
                "additionalProperties": false,
                "description": "Minimum resources guaranteed for the container.",
                "properties": {
                  "cpu": {
                    "description": "Minimum CPU guaranteed for the container.",
                    "examples": [
                      "100m"
                    ],
                    "pattern": "^[1-9][0-9]*m?$",
                    "required": [],
                    "type": "string"
                  },
                  "memory": {
                    "description": "Minimum memory guaranteed for the container.",
                    "examples": [
                      "128Mi"
                    ],
                    "pattern": "^[1-9][0-9]*[KMGTE]i?$",
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            },
            "required": [],
            "type": "object"
          },
          "secrets": {
            "additionalProperties": true,
            "description": "Secrets, to be mounted as a volume, for the container. This is used to provide sensitive information (e.g., API keys, credentials) to the container. These will be mounted to the /secrets directory inside the container.\n",
            "required": [],
            "type": "object"
          },
          "service": {
            "additionalProperties": false,
            "description": "Configuration for the Service to expose the container. This is used to expose the container to other services in the cluster.\n",
            "properties": {
              "headless": {
                "description": "Whether the Service is headless.",
                "examples": [
                  "true"
                ],
                "required": [],
                "type": "boolean"
              },
              "port": {
                "description": "Port to expose on the Service.",
                "examples": [
                  "80"
                ],
                "required": [],
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol to use for the Service.",
                "enum": [
                  "TCP",
                  "UDP"
                ],
                "examples": [
                  "TCP"
                ],
                "required": [],
                "type": "string"
              },
              "type": {
                "description": "Type of the Service.",
                "enum": [
                  "ClusterIP",
                  "NodePort",
                  "LoadBalancer"
                ],
                "examples": [
                  "ClusterIP"
                ],
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "volumes": {
            "description": "Configurations for additional volumes to be mounted into the container. The key of each volume object is the name of the volume.\n",
            "items": {
              "additionalProperties": false,
              "properties": {
                "mountPath": {
                  "description": "Path inside the container where the volume will be mounted.",
                  "examples": [
                    "/data"
                  ],
                  "required": [],
                  "type": "string"
                },
                "name": {
                  "description": "Name of the volume.",
                  "examples": [
                    "my-volume"
                  ],
                  "pattern": "^[a-z0-9-]+$",
                  "required": [],
                  "type": "string"
                },
                "readOnly": {
                  "description": "Whether the volume should be mounted as read-only.",
                  "examples": [
                    "true"
                  ],
                  "required": [],
                  "type": "boolean"
                },
                "size": {
                  "description": "Size of the volume.",
                  "examples": [
                    "5Gi"
                  ],
                  "pattern": "^[1-9][0-9]*[KMGTE]i?$",
                  "required": [],
                  "type": "string"
                }
              },
              "required": [
                "name",
                "mountPath",
                "size"
              ],
              "type": "object"
            },
            "required": [],
            "type": "array"
          }
        },
        "required": [
          "name",
          "image"
        ],
        "type": "object"
      },
      "required": [],
      "title": "deployments",
      "type": "array"
    },
    "environment": {
      "additionalProperties": false,
      "default": "prod",
      "description": "Environment in which the application is being deployed. This is used in the Deployment metadata labels. For example, if the environment is set to \"prod\", the Deployment name will be \"my-app-prod\".",
      "required": [],
      "title": "environment",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "statefulSets": {
      "additionalProperties": false,
      "description": "Configuration for the container image to be used in the Deployment. This is used to specify the container image, pull policy, and container port.\n",
      "items": {
        "additionalProperties": false,
        "properties": {
          "config": {
            "additionalProperties": false,
            "description": "Configuration file to be mounted as a volume (e.g., config.yaml). This is typically used for application-specific configuration files. Pass these configuration files when running helm install using --set-file. For example: helm install my-release . --set-file appConfig=config.yaml\n",
            "properties": {
              "fileName": {
                "description": "Name of the configuration file to be mounted as.",
                "examples": [
                  "config.yaml"
                ],
                "required": [],
                "type": "string"
              },
              "fileVariable": {
                "description": "Name of the variable containing the configuration file.",
                "examples": [
                  "appConfig"
                ],
                "required": [],
                "type": "string"
              },
              "mountPath": {
                "description": "Path inside the container where the configuration file will be mounted.",
                "examples": [
                  "/config"
                ],
                "required": [],
                "type": "string"
              }
            },
            "required": [
              "fileVariable"
            ],
            "type": "object"
          },
          "containerPort": {
            "description": "Port to expose on the container.",
            "examples": [
              "80"
            ],
            "required": [],
            "type": "integer"
          },
          "environment": {
            "additionalProperties": true,
            "description": "Configurations for environment variables loaded from a ConfigMap. This allows the container to access configuration values via environment variables, specified as key-value pairs.\n",
            "required": [],
            "type": "object"
          },
          "image": {
            "description": "Container image to be used.",
            "examples": [
              "nginx:latest"
            ],
            "required": [],
            "type": "string"
          },
          "name": {
            "description": "Name of the container.",
            "examples": [
              "my-container"
            ],
            "pattern": "^[a-z0-9-]+$",
            "required": [],
            "type": "string"
          },
          "pullPolicy": {
            "description": "Pull policy for the container image.",
            "enum": [
              "Always",
              "IfNotPresent",
              "Never"
            ],
            "examples": [
              "Always"
            ],
            "required": []
          },
          "readinessProbe": {
            "additionalProperties": false,
            "description": "Configuration for the readiness probe to check if the container is ready to serve traffic. This is used to determine when the container is ready to accept requests. This can be an HTTP check or a TCP check, do not use both.\n",
            "properties": {
              "httpGet": {
                "additionalProperties": false,
                "description": "HTTP check to perform for the readiness probe. This is used to check if the container is ready to serve traffic.\n",
                "properties": {
                  "path": {
                    "description": "Path to check for the HTTP request.",
                    "examples": [
                      "/healthz"
                    ],
                    "required": [],
                    "type": "string"
                  },
                  "port": {
                    "description": "Port to check for the HTTP request.",
                    "examples": [
                      "8080"
                    ],
                    "required": [],
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "initialDelaySeconds": {
                "description": "Number of seconds after the container has started before the readiness probe is initiated.",
                "examples": [
                  "5"
                ],
                "required": [],
                "type": "integer"
              },
              "periodSeconds": {
                "description": "How often (in seconds) to perform the readiness probe.",
                "examples": [
                  "10"
                ],
                "required": [],
                "type": "integer"
              },
              "tcpSocket": {
                "additionalProperties": false,
                "description": "TCP check to perform for the readiness probe. This is used to check if the container is ready to serve traffic.\n",
                "properties": {
                  "port": {
                    "description": "Port to check for the TCP connection.",
                    "examples": [
                      "8080"
                    ],
                    "required": [],
                    "type": "integer"
                  }
                },
                "required": [],
                "type": "object"
              },
              "timeoutSeconds": {
                "description": "Number of seconds after which the readiness probe times out.",
                "examples": [
                  "1"
                ],
                "required": [],
                "type": "integer"
              }
            },
            "required": [],
            "type": "object"
          },
          "replicas": {
            "description": "Number of replicas for the Deployment.",
            "examples": [
              "3"
            ],
            "maximum": 3,
            "minimum": 1,
            "required": [],
            "type": "integer"
          },
          "resources": {
            "additionalProperties": false,
            "description": "Resource limits and requests for the container.",
            "properties": {
              "limits": {
                "additionalProperties": false,
                "description": "Maximum resources the container can use.",
                "properties": {
                  "cpu": {
                    "description": "Maximum CPU the container can use.",
                    "examples": [
                      "200m"
                    ],
                    "pattern": "^[1-9][0-9]*m?$",
                    "required": [],
                    "type": "string"
                  },
                  "memory": {
                    "description": "Maximum memory the container can use.",
                    "examples": [
                      "256Mi"
                    ],
                    "pattern": "^[1-9][0-9]*[KMGTE]i?$",
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "requests": {
                "additionalProperties": false,
                "description": "Minimum resources guaranteed for the container.",
                "properties": {
                  "cpu": {
                    "description": "Minimum CPU guaranteed for the container.",
                    "examples": [
                      "100m"
                    ],
                    "pattern": "^[1-9][0-9]*m?$",
                    "required": [],
                    "type": "string"
                  },
                  "memory": {
                    "description": "Minimum memory guaranteed for the container.",
                    "examples": [
                      "128Mi"
                    ],
                    "pattern": "^[1-9][0-9]*[KMGTE]i?$",
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              }
            },
            "required": [],
            "type": "object"
          },
          "secrets": {
            "additionalProperties": true,
            "description": "Secrets, to be mounted as a volume, for the container. This is used to provide sensitive information (e.g., API keys, credentials) to the container. These will be mounted to the /secrets directory inside the container.\n",
            "required": [],
            "type": "object"
          },
          "service": {
            "additionalProperties": false,
            "description": "Configuration for the Service to expose the container. This is used to expose the container to other services in the cluster.\n",
            "properties": {
              "headless": {
                "description": "Whether the Service is headless.",
                "examples": [
                  "true"
                ],
                "required": [],
                "type": "boolean"
              },
              "port": {
                "description": "Port to expose on the Service.",
                "examples": [
                  "80"
                ],
                "required": [],
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol to use for the Service.",
                "enum": [
                  "TCP",
                  "UDP"
                ],
                "examples": [
                  "TCP"
                ],
                "required": [],
                "type": "string"
              },
              "type": {
                "description": "Type of the Service.",
                "enum": [
                  "ClusterIP",
                  "NodePort",
                  "LoadBalancer"
                ],
                "examples": [
                  "ClusterIP"
                ],
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "serviceName": {
            "description": "Name of the Service to expose the container.",
            "examples": [
              "my-service"
            ],
            "required": [],
            "type": "string"
          },
          "volumes": {
            "description": "Configurations for additional volumes to be mounted into the container. The key of each volume object is the name of the volume.\n",
            "items": {
              "additionalProperties": false,
              "properties": {
                "mountPath": {
                  "description": "Path inside the container where the volume will be mounted.",
                  "examples": [
                    "/data"
                  ],
                  "required": [],
                  "type": "string"
                },
                "name": {
                  "description": "Name of the volume.",
                  "examples": [
                    "my-volume"
                  ],
                  "pattern": "^[a-z0-9-]+$",
                  "required": [],
                  "type": "string"
                },
                "readOnly": {
                  "description": "Whether the volume should be mounted as read-only.",
                  "examples": [
                    "true"
                  ],
                  "required": [],
                  "type": "boolean"
                },
                "size": {
                  "description": "Size of the volume.",
                  "examples": [
                    "5Gi"
                  ],
                  "pattern": "^[1-9][0-9]*[KMGTE]i?$",
                  "required": [],
                  "type": "string"
                }
              },
              "required": [
                "name",
                "mountPath",
                "size"
              ],
              "type": "object"
            },
            "required": [],
            "type": "array"
          }
        },
        "required": [
          "name",
          "image"
        ],
        "type": "object"
      },
      "required": [],
      "title": "statefulSets",
      "type": "array"
    },
    "version": {
      "additionalProperties": false,
      "default": "not set",
      "description": "Version of the application being deployed. This is used in the Deployment metadata labels and is usually the commit hash set by the CI/CD pipeline.",
      "required": [],
      "title": "version",
      "type": "string"
    }
  },
  "required": [
    "environment",
    "version"
  ],
  "type": "object"
}
