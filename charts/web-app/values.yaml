# yaml-language-server: $schema=values.schema.json

# @schema
# type: string
# additionalProperties: false
# required: true
# description: >
#   Environment in which the application is being deployed.
#   This is used in the Deployment metadata labels.
#   For example, if the environment is set to "prod", the Deployment name will be "my-app-prod".
# @schema
environment: "prod"

# @schema
# type: string
# additionalProperties: false
# required: true
# description: >
#   Version of the application being deployed.
#   This is used in the Deployment metadata labels and is usually the commit hash set by the CI/CD pipeline.
# @schema
version: "not set"

# @schema
# type: array
# additionalProperties: false
# description: >
#   Configuration for the container image to be used in the Deployment.
#   This is used to specify the container image, pull policy, and container port.
# items:
#   type: object
#   additionalProperties: false
#   required: [name, image]
#   properties:
#     name:
#       type: string
#       description: Name of the container.
#       examples: [my-container]
#       pattern: "^[a-z0-9-]+$"
#     image:
#       type: string
#       required: true
#       description: Container image to be used.
#       examples: [nginx:latest]
#     pullPolicy:
#       description: Pull policy for the container image.
#       examples: [Always]
#       enum: [Always, IfNotPresent, Never]
#     port:
#       type: integer
#       description: Port to expose on the container.
#       examples: [80]
#     exposeService:
#       type: boolean
#       description: >
#         Whether to expose the container as a Service.
#         One and only one of the containers in the Deployment should have this set to true.
#       examples: [true]
#     replicas:
#       type: integer
#       description: Number of replicas for the Deployment.
#       examples: [3]
#       minimum: 1
#       maximum: 3
#     readinessProbe:
#       type: object
#       additionalProperties: false
#       description: >
#         Configuration for the readiness probe to check if the container is ready to serve traffic.
#         This is used to determine when the container is ready to accept requests.
#       properties:
#         path:
#           type: string
#           description: Path to check for the HTTP request.
#           examples: [/healthz]
#         port:
#           type: integer
#           description: Port to check for the HTTP request.
#           examples: [8080]
#         initialDelaySeconds:
#           type: integer
#           description: Number of seconds after the container has started before the readiness probe is initiated.
#           examples: [5]
#         periodSeconds:
#           type: integer
#           description: How often (in seconds) to perform the readiness probe.
#           examples: [10]
#         timeoutSeconds:
#           type: integer
#           description: Number of seconds after which the readiness probe times out.
#           examples: [1]
#     resources:
#       type: object
#       additionalProperties: false
#       description: Resource limits and requests for the container.
#       properties:
#         limits:
#           type: object
#           additionalProperties: false
#           description: Maximum resources the container can use.
#           properties:
#             cpu:
#               type: string
#               description: Maximum CPU the container can use.
#               examples: ["200m"]
#               pattern: "^[1-9][0-9]*m?$"
#             memory:
#               type: string
#               description: Maximum memory the container can use.
#               examples: ["256Mi"]
#               pattern: "^[1-9][0-9]*[KMGTE]i?$"
#         requests:
#           type: object
#           additionalProperties: false
#           description: Minimum resources guaranteed for the container.
#           properties:
#             cpu:
#               type: string
#               description: Minimum CPU guaranteed for the container.
#               examples: ["100m"]
#               pattern: "^[1-9][0-9]*m?$"
#             memory:
#               type: string
#               description: Minimum memory guaranteed for the container.
#               examples: ["128Mi"]
#               pattern: "^[1-9][0-9]*[KMGTE]i?$"
#     secrets:
#       type: object
#       additionalProperties: true
#       description: >
#         Secrets, to be mounted as a volume, for the container.
#         This is used to provide sensitive information (e.g., API keys, credentials) to the container.
#         These will be mounted to the /secrets directory inside the container.
#       required: false
#     environment:
#       type: object
#       additionalProperties: true
#       description: >
#         Configurations for environment variables loaded from a ConfigMap.
#         This allows the container to access configuration values via environment variables, specified as key-value pairs.
#       required: false
#     volumes:
#       type: array
#       description: >
#         Configurations for additional volumes to be mounted into the container.
#         The key of each volume object is the name of the volume.
#       items:
#         type: object
#         additionalProperties: false
#         required: [name, mountPath, size]
#         properties:
#           name:
#             type: string
#             description: Name of the volume.
#             examples: [my-volume]
#             pattern: "^[a-z0-9-]+$"
#           mountPath:
#             type: string
#             description: Path inside the container where the volume will be mounted.
#             examples: [/data]
#           size:
#             type: string
#             description: Size of the volume.
#             examples: ["5Gi"]
#             pattern: ^[1-9][0-9]*[KMGTE]i?$
#           readOnly:
#             type: boolean
#             description: Whether the volume should be mounted as read-only.
#             examples: [true]
# @schema
deployments: []

# @schema
# type: array
# additionalProperties: false
# required: true
# description: >
#   Configuration for the Ingress resource to expose the application.
#   This is used to specify the subdomain, URL prefix.
# items:
#   type: object
#   additionalProperties: false
#   required: [subdomain]
#   properties:
#     subdomain:
#       type: string
#       required: true
#       description: Subdomain to be used for the Ingress.
#       examples: [my-app]
#     urlPrefix:
#       type: string
#       description: URL prefix to be used for the Ingress.
#       examples: [/app]
# @schema
ingress: []
